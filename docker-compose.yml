version: "3.9"

volumes:
  elk_elasticsearch_data:

services:
  postgresdb:
    image: postgres:latest
    container_name: minitwitdb
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 2345:5432
    networks:
      - outside
    healthcheck:
      test: "exit 0"
  
  web:
    container_name: minitwitserver
    image: minitwit
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8765:7112
    environment:
      - ASPNETCORE_URLS=http://+:7112/
      - DB_HOST=172.17.0.1
      - DB_PASSWORD=postgres
      - DB_PORT=2345
      - IGNORE_ANTIFORGERY_TOKEN=True
    networks:
      - outside
    depends_on:
      postgresdb:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - outside

  grafana:
    image: grafana/grafana:8.2.6
    ports:
      - "3000:3000"  
    volumes:
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./grafana/datasource.yaml:/etc/grafana/provisioning/datasources/main.yaml
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - outside 
    depends_on:
      - prometheus
        
  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "discovery.type=single-node"
    volumes:
      - elk_elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - outside
        
  kibana:
    image: "docker.elastic.co/kibana/kibana:7.17.1"
    ports:
      - "5601:5601"
    environment:
      elasticsearch.hosts: '["http://elasticsearch:9200"]'
    networks:
      - outside
  
networks:
  outside: